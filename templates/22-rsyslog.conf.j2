#===============================================================================
#
# Forward syslog to {{ rsyslog_srv }}
#
#-------------------------------------------------------------------------------
# {{ ansible_managed }}
#===============================================================================


# Setup disk assisted queues
$WorkDirectory /var/spool/rsyslog # where to place spool files
$ActionQueueFileName {{ rsyslog_action_queue_file_name }}
$ActionQueueMaxDiskSpace {{ rsyslog_action_queue_max_disk_space }}
$ActionQueueSaveOnShutdown {{ rsyslog_action_queue_save_on_shutdown }}
$ActionQueueType {{ rsyslog_action_queue_action_type }}
$ActionResumeRetryCount {{ rsyslog_action_resume_retry_count }}

{% for line in rsyslog_additional_config %}
{{ line }}
{% endfor %}

{% if rsyslog_tls %}
{% if services[rsyslog_srv].cert_name is defined %}
$DefaultNetstreamDriverCAFile {{ rsyslog_cert_path }}/{{ rsyslog_cert }}
{% else %}
$DefaultNetstreamDriverCAFile {{ rsyslog_cert_path_default }}/{{ rsyslog_cert_default }}
{% endif %}
{% endif %}

{% if rsyslog_srv == "loggly.com" %}
template(name="{{ rsyslog_srv }}" type="string" string="<%pri%>%protocol-version% %timestamp:::date-rfc3339% %hostname% %app-name% %procid% %msgid% [{{ rsyslog_token }}@41058 {% if rsyslog_tag %}tag=\"{{ rsyslog_tag }}\"{% endif %}] %msg%\n")
{% elif rsyslog_srv == "logz.io" %}
template(name="{{ rsyslog_srv }}" type="string" string="[{{ rsyslog_token }}] <%pri%>%protocol-version% %timestamp:::date-rfc3339% %hostname% %app-name% %procid% %msgid% %msg%\n")
{% elif rsyslog_srv == "newrelic.com" %}
template(name="{{ rsyslog_srv }}" type="string" string="{{ rsyslog_token }} <%pri%>%protocol-version% %timestamp:::date-rfc3339% %hostname% %app-name% %procid% %msgid% %structured-data% %msg%\n")
{% endif %}

# Send messages over TCP using the template.
{% if rsyslog_tls %}
action(type="omfwd" protocol="tcp" target="{{ rsyslog_services[rsyslog_srv].url }}" port="{{ rsyslog_services[rsyslog_srv].port_tls  }}" template="{{ rsyslog_srv }}" StreamDriver="gtls" StreamDriverMode="1" StreamDriverAuthMode="x509/name" StreamDriverPermittedPeers="{{ rsyslog_services[rsyslog_srv].peer }}")
{% else %}
action(type="omfwd" protocol="tcp" target="{{ rsyslog_services[rsyslog_srv].url }}" port="{{ rsyslog_services[rsyslog_srv].port }}" template="{{ rsyslog_srv }}")
{% endif %}
